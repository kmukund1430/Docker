name: SSH into EC2 and Install Docker

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: SSH to EC2 instance
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@54.82.15.99 << 'EOF'
            # Add Docker's official GPG key:
            sudo apt-get update
            sudo apt-get install -y ca-certificates curl
            sudo install -m 0755 -d /etc/apt/keyrings
            sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
            sudo chmod a+r /etc/apt/keyrings/docker.asc

            # Add the Docker repository to Apt sources:
            echo \
              "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
              $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
              sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update

            # Install Docker packages:
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
            echo "Docker installed successfully!"

            # check the docker versions 
            sudo docker --version 
            sudo docker images
            sudo docker ps -a
            sudo docker network ls 
            
            
            # Pull the NGINX Docker image:
            sudo docker pull nginx

            # Check if the container already exists
            if sudo docker ps -a --filter "name=nginx-container" --format '{{.Names}}' | grep -w nginx-container; then
              echo "Container 'nginx-container' already exists, skipping creation."
            else
              # Run the NGINX container:
              sudo docker run -d -p 80:80 --name nginx-container nginx
              echo "NGINX container is running and accessible on port 80!"
            fi
            
            # Pull the Ubuntu docker image:
            sudo docker pull ubuntu 
            
            # Check if the container already exists
            if sudo docker ps -a --filter "name=mukundv1" --format '{{.Names}}' | grep -w mukundv1; then
              echo "Container 'mukundv1' already exists, skipping creation."
            else
              # Run the Ubuntu container:
              sudo docker run -dit --name mukundv1 ubuntu
              # Create directory and file inside container
              sudo docker exec mukundv1 bash -c "mkdir -p /tmp/mydir && echo 'File created inside the directory' > /tmp/mydir/myfile.txt"
             
           # Check if the file exists inside the container:
            file_exists=$(sudo docker exec mukundv1 bash -c "test -f /tmp/mydir/myfile.txt && echo 'File exists' || echo 'File does not exist'")

            if [ "$file_exists" == "File exists" ]; then
              echo "Success: The file was created inside the container!"
            else
              echo "Error: The file was not created inside the container."
            fi   
              
              # Verify file creation
              sudo docker exec mukundv1 cat /tmp/mydir/myfile.txt
            fi
          EOF
